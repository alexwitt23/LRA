/**
 * This file was automatically generated by the ICG based on the file:
 * /mnt/c/Users/alexw/Desktop/projects/LRA/SIM_numeric/models/rocket/include/rocket.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/mnt/c/Users/alexw/Desktop/projects/LRA/SIM_numeric/models/rocket/include/rocket.hh"

extern "C" {

ATTRIBUTES attrRocket[] = {
{"altitude", "double", "m", "", "",
  "xyz-position",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"velocity", "double", "m/s", "", "",
  "xyz-velocity",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  8, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"acceleration", "double", "m/s2", "", "",
  "xyz-acceleration",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  16, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"thrust", "double", "kg.m/s2", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  24, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"area", "double", "m2", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  32, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"Cd", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  40, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"mass", "double", "kg", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"mdot", "double", "kg/s", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  56, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"massBurn", "double", "kg", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  64, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"mass0", "double", "kg", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  72, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"touchDown", "bool", "1", "", "",
  "",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 4,
  80, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"rf", "REGULA_FALSI", "1", "", "",
  "",
  15,TRICK_STRUCTURED, 0, 0, 0, Language_CPP, 0,
  88, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"


void init_attrRocket() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrRocket[11].type_name) , &attrRocket[11], __FILE__ , __LINE__ ) ;
}

extern "C" {

void init_attrRocket_c_intf() {
    init_attrRocket() ;
}

size_t io_src_sizeof_Rocket() {
    return sizeof(Rocket) ;
}

void* io_src_allocate_Rocket(int num) {
    Rocket* temp = (Rocket*)calloc(num, sizeof(Rocket));
    return (void*)temp;
}

void io_src_destruct_Rocket(void* address __attribute__((unused)), int num __attribute__((unused))) {
}

void io_src_delete_Rocket(void* address __attribute__((unused))) {}

} //extern "C"

struct UnitsMapRocket {
    UnitsMapRocket() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("Rocket_altitude", "m") ;
        units_map_ptr->add_param("Rocket_velocity", "m/s") ;
        units_map_ptr->add_param("Rocket_acceleration", "m/s2") ;
        units_map_ptr->add_param("Rocket_thrust", "kg.m/s2") ;
        units_map_ptr->add_param("Rocket_area", "m2") ;
        units_map_ptr->add_param("Rocket_Cd", "1") ;
        units_map_ptr->add_param("Rocket_mass", "kg") ;
        units_map_ptr->add_param("Rocket_mdot", "kg/s") ;
        units_map_ptr->add_param("Rocket_massBurn", "kg") ;
        units_map_ptr->add_param("Rocket_mass0", "kg") ;
        units_map_ptr->add_param("Rocket_touchDown", "1") ;
        units_map_ptr->add_param("Rocket_rf", "1") ;
    }
} umRocket;

